{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Pc\\\\Desktop\\\\ahmed\\\\src\\\\components\\\\AddBeneficiaire\\\\AddBeneficiaire.jsx\",\n  _s = $RefreshSig$();\nimport Stepper from '@mui/material/Stepper';\nimport Step from '@mui/material/Step';\nimport StepButton from '@mui/material/StepButton';\nimport Typography from '@mui/material/Typography';\nimport { TextField, Button, Box, Paper } from '@mui/material';\nimport axios from 'axios';\nimport { MenuItem } from '@mui/material';\nimport React, { useEffect, useState } from 'react';\nimport { Await } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst steps = ['Création du bénéficiaire', 'Affecter une ligne', 'Affecter un forfait'];\nexport default function HorizontalNonLinearStepper() {\n  _s();\n  const [activeStep, setActiveStep] = React.useState(0);\n  const [completed, setCompleted] = React.useState({});\n  const addBeneficiaire = async () => {};\n  const totalSteps = () => {\n    return steps.length;\n  };\n  const completedSteps = () => {\n    return Object.keys(completed).length;\n  };\n  const isLastStep = () => {\n    return activeStep === totalSteps() - 1;\n  };\n  const allStepsCompleted = () => {\n    return completedSteps() === totalSteps();\n  };\n  const handleNext = () => {\n    const newActiveStep = isLastStep() && !allStepsCompleted() ? steps.findIndex((step, i) => !(i in completed)) : activeStep + 1;\n    setActiveStep(newActiveStep);\n    setFormData({\n      ...formData,\n      [steps[activeStep]]: formData\n    });\n  };\n  const handleBack = () => {\n    setActiveStep(prevActiveStep => prevActiveStep - 1);\n    setFormData({\n      ...formData,\n      [steps[activeStep - 1]]: formData\n    });\n  };\n  const handleStep = step => () => {\n    setActiveStep(step);\n  };\n  const handleComplete = async () => {\n    const newCompleted = completed;\n    newCompleted[activeStep] = true;\n    setCompleted(newCompleted);\n    if (allStepsCompleted()) {\n      try {\n        // Récupérez les données du formulaire\n        const formData = {\n          nom: 'nom',\n          // Valeur du champ nom\n          prenom: 'prenom',\n          // Valeur du champ prénom\n          matricule: 'matricule',\n          // Valeur du champ matricule\n          centreeCout: 'centrecout',\n          rfBeneficiaires: 'statutBeneficiaire',\n          rfDirections: 'rfDirection'\n          // Autres champs du formulaire\n        };\n\n        // Envoyez les données au backend en utilisant une requête POST\n        const response = await axios.post('http:localhost/8089/beneficiaires/add', formData);\n        const newBeneficiaryId = response.data.id;\n        console.log(newBeneficiaryId.id);\n\n        // Vérifiez la réponse du backend et effectuez des actions en conséquence\n        if (response.status === 200) {\n          // L'ajout du bénéficiaire a réussi\n          console.log('Bénéficiaire ajouté avec succès !');\n          // Effectuez ici d'autres actions ou affichez un message de succès à l'utilisateur\n        } else {\n          // Il y a eu une erreur lors de l'ajout du bénéficiaire\n          console.log(\"Erreur lors de l'ajout du bénéficiaire\");\n          // Effectuez ici d'autres actions ou affichez un message d'erreur à l'utilisateur\n        }\n\n        // Mettez à jour l'état de la ligne affectée\n        const ligne_id = formData.ligne_id; // Remplacez \"ligneId\" par le champ approprié qui contient l'ID de la ligne affectée\n        const updatedLigne = await axios.put(`http://localhost:8089/lignes/updateLigne`, {\n          etat: 'affecté'\n        } // Remplacez \"etat\" par le champ approprié qui représente l'état de la ligne\n        );\n\n        setLigneAffectee(updatedLigne.data);\n\n        // Réinitialisez le formulaire et les étapes\n        handleReset();\n      } catch (error) {\n        // Gérez les erreurs de la requête\n        console.error(\"Erreur lors de l'appel de l'API d'ajout du bénéficiaire :\", error);\n        // Effectuez ici d'autres actions ou affichez un message d'erreur à l'utilisateur\n      }\n    } else {\n      handleNext();\n    }\n  };\n  useEffect(() => {\n    const fetchCentreCout = async () => {\n      try {\n        const response = await axios.get('http://localhost:8089/centreCouts');\n        setCentreCout(response.data);\n      } catch (error) {\n        console.error('Erreur lors de la récupération des centres de coût :', error);\n      }\n    };\n    fetchCentreCout();\n  }, []);\n  useEffect(() => {\n    const fetchRfBeneficiaires = async () => {\n      try {\n        const response = await axios.get('http://localhost:8089/rfbeneficiaires');\n        setRfBeneficiaires(response.data);\n      } catch (error) {\n        console.error('Erreur lors de la récupération des RfBeneficiaires :', error);\n      }\n    };\n    fetchRfBeneficiaires();\n  }, []);\n  useEffect(() => {\n    const fetchRfDirections = async () => {\n      try {\n        const response = await axios.get('http://localhost:8089/rfdirections');\n        setRfDirections(response.data);\n      } catch (error) {\n        console.error('Erreur lors de la récupération des RfDirections :', error);\n      }\n    };\n    fetchRfDirections();\n  }, []);\n  useEffect(() => {\n    const fetchLigne = async () => {\n      try {\n        const response = await axios.get('http://localhost:8089/lignes/RFLingWithstatus?status=En%20Stock');\n        setLigne(response.data);\n      } catch (error) {\n        console.error('Erreur lors de la récupération des lignes :', error);\n      }\n    };\n    fetchLigne();\n  }, []);\n  useEffect(() => {\n    const fetchForfait = async () => {\n      try {\n        const response = await axios.get('http://localhost:8089/forfaits');\n        setForfait(response.data);\n      } catch (error) {\n        console.error('Erreur lors de la récupération des forfaits :', error);\n      }\n    };\n    fetchForfait();\n  }, []);\n  const [centreeCout, setCentreCout] = useState([]);\n  const [rfDirections, setRfDirections] = useState([]);\n  const [rfBeneficiaires, setRfBeneficiaires] = useState([]);\n  const [ligne, setLigne] = useState([]);\n  const [forfait, setForfait] = useState([]);\n  const handleReset = () => {\n    setActiveStep(0);\n    setCompleted({});\n  };\n  const [ligneAffectee, setLigneAffectee] = useState('');\n  const [formData, setFormData] = useState({\n    nom: '',\n    prenom: '',\n    matricule: '',\n    numLigne: '',\n    nomforfait: '',\n    rfBeneficiaires: '',\n    rfDirections: '',\n    centreeCout: ''\n    // Autres champs du formulaire\n  });\n\n  const renderForm = step => {\n    switch (step) {\n      case 0:\n        return /*#__PURE__*/_jsxDEV(\"form\", {\n          children: [/*#__PURE__*/_jsxDEV(Box, {\n            sx: {\n              display: 'flex',\n              gap: '20px',\n              margin: '10px'\n            },\n            children: [/*#__PURE__*/_jsxDEV(TextField, {\n              label: \"Nom\",\n              variant: \"outlined\",\n              fullWidth: true,\n              value: formData.nom,\n              onChange: e => setFormData({\n                ...formData,\n                nom: e.target.value\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 207,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(TextField, {\n              label: \"Pr\\xE9nom\",\n              variant: \"outlined\",\n              fullWidth: true,\n              value: formData.prenom,\n              onChange: e => setFormData({\n                ...formData,\n                prenom: e.target.value\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 209,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 206,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Box, {\n            sx: {\n              display: 'flex',\n              gap: '20px',\n              margin: '10px'\n            },\n            children: [/*#__PURE__*/_jsxDEV(TextField, {\n              label: \"Matricule\",\n              variant: \"outlined\",\n              fullWidth: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 214,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(TextField, {\n              label: \"Centre de co\\xFBt\",\n              variant: \"outlined\",\n              fullWidth: true,\n              select: true,\n              value: formData.centreCout,\n              onChange: e => setFormData({\n                ...formData,\n                centreCout: e.target.value\n              }),\n              children: centreeCout.map(centreCout => /*#__PURE__*/_jsxDEV(MenuItem, {\n                value: centreCout.id,\n                children: centreCout.centreCout\n              }, centreCout.id, false, {\n                fileName: _jsxFileName,\n                lineNumber: 224,\n                columnNumber: 21\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 215,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 213,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Box, {\n            sx: {\n              display: 'flex',\n              gap: '20px',\n              margin: '10px'\n            },\n            children: [/*#__PURE__*/_jsxDEV(TextField, {\n              label: \"Direction\",\n              variant: \"outlined\",\n              fullWidth: true,\n              select: true,\n              value: formData.rfDirection,\n              onChange: e => setFormData({\n                ...formData,\n                rfDirection: e.target.value\n              }),\n              children: rfDirections.map(rfDirection => /*#__PURE__*/_jsxDEV(MenuItem, {\n                value: rfDirection.id,\n                children: rfDirection.nomDirection\n              }, rfDirection.id, false, {\n                fileName: _jsxFileName,\n                lineNumber: 240,\n                columnNumber: 23\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 231,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(TextField, {\n              label: \"Status de B\\xE9n\\xE9ficiaire\",\n              variant: \"outlined\",\n              fullWidth: true,\n              select: true,\n              value: formData.rfBeneficiaire,\n              onChange: e => setFormData({\n                ...formData,\n                rfBeneficiaire: e.target.value\n              }),\n              children: rfBeneficiaires.map(rfBeneficiaire => /*#__PURE__*/_jsxDEV(MenuItem, {\n                value: rfBeneficiaire.id,\n                children: rfBeneficiaire.statutBeneficiaire\n              }, rfBeneficiaire.id, false, {\n                fileName: _jsxFileName,\n                lineNumber: 254,\n                columnNumber: 19\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 245,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 230,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Box, {\n            sx: {\n              display: 'flex',\n              justifyContent: 'flex-end',\n              py: 1\n            },\n            children: /*#__PURE__*/_jsxDEV(Button, {\n              onClick: handleCreerBeneficiaire,\n              variant: \"contained\",\n              disableElevation: true,\n              children: \"Creer\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 261,\n              columnNumber: 13\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 260,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 205,\n          columnNumber: 11\n        }, this);\n      case 1:\n        return /*#__PURE__*/_jsxDEV(\"form\", {\n          children: /*#__PURE__*/_jsxDEV(TextField, {\n            label: \"Les num\\xE9ros de lignes disponnibles\",\n            variant: \"outlined\",\n            fullWidth: true,\n            select: true,\n            sx: {\n              width: '50%'\n            },\n            value: formData.numLigne,\n            onChange: e => setFormData({\n              ...formData,\n              numLigne: e.target.value\n            }),\n            children: ligne.map(ligne => /*#__PURE__*/_jsxDEV(MenuItem, {\n              value: ligne.id,\n              children: ligne.numLigne\n            }, ligne.id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 279,\n              columnNumber: 13\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 269,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 267,\n          columnNumber: 11\n        }, this);\n      case 2:\n        return /*#__PURE__*/_jsxDEV(\"form\", {\n          children: /*#__PURE__*/_jsxDEV(Box, {\n            sx: {\n              display: 'flex',\n              gap: '20px',\n              margin: '10px'\n            },\n            children: /*#__PURE__*/_jsxDEV(TextField, {\n              label: \"Le forfait\",\n              variant: \"outlined\",\n              fullWidth: true,\n              select: true,\n              sx: {\n                width: '50%'\n              },\n              justifyContent: \"center\",\n              value: formData.nomforfait,\n              onChange: e => setFormData({\n                ...formData,\n                nomforfait: e.target.value\n              }),\n              children: forfait.map(forfait => /*#__PURE__*/_jsxDEV(MenuItem, {\n                value: forfait.id,\n                children: forfait.nomForfait\n              }, forfait.id, false, {\n                fileName: _jsxFileName,\n                lineNumber: 304,\n                columnNumber: 19\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 293,\n              columnNumber: 13\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 292,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 290,\n          columnNumber: 11\n        }, this);\n      default:\n        return null;\n    }\n  };\n  function handleCreerBeneficiaire() {\n    console.log(\"handleCreerBeneficiaire\");\n    console.log(formData);\n  }\n  return /*#__PURE__*/_jsxDEV(Box, {\n    sx: {\n      width: '100%'\n    },\n    children: /*#__PURE__*/_jsxDEV(Paper, {\n      sx: {\n        width: \"100%\",\n        mb: 2,\n        padding: \"1%\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(Stepper, {\n        nonLinear: true,\n        activeStep: activeStep,\n        children: steps.map((label, index) => /*#__PURE__*/_jsxDEV(Step, {\n          completed: completed[index],\n          children: /*#__PURE__*/_jsxDEV(StepButton, {\n            color: \"inherit\",\n            onClick: handleStep(index),\n            children: label\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 329,\n            columnNumber: 13\n          }, this)\n        }, label, false, {\n          fileName: _jsxFileName,\n          lineNumber: 328,\n          columnNumber: 11\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 326,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        children: [/*#__PURE__*/_jsxDEV(Box, {\n          sx: {\n            pt: 2\n          },\n          children: renderForm(activeStep)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 336,\n          columnNumber: 9\n        }, this), allStepsCompleted() ? /*#__PURE__*/_jsxDEV(React.Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            sx: {\n              mt: 2,\n              mb: 1\n            },\n            children: \"All steps completed - you're finished\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 341,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Box, {\n            sx: {\n              display: 'flex',\n              flexDirection: 'row',\n              pt: 2\n            },\n            children: [/*#__PURE__*/_jsxDEV(Box, {\n              sx: {\n                flex: '1 1 auto'\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 345,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              onClick: handleReset,\n              children: \"Reset\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 346,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 344,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 340,\n          columnNumber: 11\n        }, this) : /*#__PURE__*/_jsxDEV(React.Fragment, {\n          children: /*#__PURE__*/_jsxDEV(Box, {\n            sx: {\n              display: 'flex',\n              flexDirection: 'row',\n              pt: 2,\n              marginTop: '20px'\n            },\n            children: [/*#__PURE__*/_jsxDEV(Button, {\n              color: \"inherit\",\n              disabled: activeStep === 0,\n              onClick: handleBack,\n              children: \"Back\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 359,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Box, {\n              sx: {\n                flex: '1 1 auto'\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 366,\n              columnNumber: 15\n            }, this), activeStep + 1 === steps.length ? /*#__PURE__*/_jsxDEV(Button, {\n              onClick: handleComplete,\n              children: \"Finish\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 369,\n              columnNumber: 17\n            }, this) : /*#__PURE__*/_jsxDEV(Button, {\n              onClick: handleNext,\n              children: \"Next\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 372,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 351,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 350,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 335,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 325,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 324,\n    columnNumber: 5\n  }, this);\n}\n_s(HorizontalNonLinearStepper, \"VAWsBtv8UO6ZSoAXMZxDOOKYjrg=\");\n_c = HorizontalNonLinearStepper;\nvar _c;\n$RefreshReg$(_c, \"HorizontalNonLinearStepper\");","map":{"version":3,"names":["Stepper","Step","StepButton","Typography","TextField","Button","Box","Paper","axios","MenuItem","React","useEffect","useState","Await","jsxDEV","_jsxDEV","steps","HorizontalNonLinearStepper","_s","activeStep","setActiveStep","completed","setCompleted","addBeneficiaire","totalSteps","length","completedSteps","Object","keys","isLastStep","allStepsCompleted","handleNext","newActiveStep","findIndex","step","i","setFormData","formData","handleBack","prevActiveStep","handleStep","handleComplete","newCompleted","nom","prenom","matricule","centreeCout","rfBeneficiaires","rfDirections","response","post","newBeneficiaryId","data","id","console","log","status","ligne_id","updatedLigne","put","etat","setLigneAffectee","handleReset","error","fetchCentreCout","get","setCentreCout","fetchRfBeneficiaires","setRfBeneficiaires","fetchRfDirections","setRfDirections","fetchLigne","setLigne","fetchForfait","setForfait","ligne","forfait","ligneAffectee","numLigne","nomforfait","renderForm","children","sx","display","gap","margin","label","variant","fullWidth","value","onChange","e","target","fileName","_jsxFileName","lineNumber","columnNumber","select","centreCout","map","rfDirection","nomDirection","rfBeneficiaire","statutBeneficiaire","justifyContent","py","onClick","handleCreerBeneficiaire","disableElevation","width","nomForfait","mb","padding","nonLinear","index","color","pt","Fragment","mt","flexDirection","flex","marginTop","disabled","_c","$RefreshReg$"],"sources":["C:/Users/Pc/Desktop/ahmed/src/components/AddBeneficiaire/AddBeneficiaire.jsx"],"sourcesContent":["import Stepper from '@mui/material/Stepper';\r\nimport Step from '@mui/material/Step';\r\nimport StepButton from '@mui/material/StepButton';\r\n\r\nimport Typography from '@mui/material/Typography';\r\nimport { TextField, Button, Box, Paper } from '@mui/material';\r\nimport axios from 'axios';\r\nimport {MenuItem } from '@mui/material';\r\nimport React, { useEffect, useState } from 'react';\r\n\r\nimport { Await } from 'react-router-dom';\r\n\r\n\r\n\r\n\r\nconst steps = ['Création du bénéficiaire', 'Affecter une ligne', 'Affecter un forfait'];\r\n\r\nexport default function HorizontalNonLinearStepper() {\r\n  const [activeStep, setActiveStep] = React.useState(0);\r\n  const [completed, setCompleted] = React.useState({});\r\n  const addBeneficiaire = async () => {\r\n  }\r\n  const totalSteps = () => {\r\n    return steps.length;\r\n  };\r\n\r\n  const completedSteps = () => {\r\n    return Object.keys(completed).length;\r\n  };\r\n\r\n  const isLastStep = () => {\r\n    return activeStep === totalSteps() - 1;\r\n  };\r\n\r\n  const allStepsCompleted = () => {\r\n    return completedSteps() === totalSteps();\r\n  };\r\n\r\n  const handleNext = () => {\r\n    const newActiveStep =\r\n      isLastStep() && !allStepsCompleted()\r\n        ? steps.findIndex((step, i) => !(i in completed))\r\n        : activeStep + 1;\r\n    setActiveStep(newActiveStep);\r\n    setFormData({ ...formData, [steps[activeStep]]: formData });\r\n  };\r\n\r\n  const handleBack = () => {\r\n    \r\n    setActiveStep((prevActiveStep) => prevActiveStep - 1);\r\n    setFormData({ ...formData, [steps[activeStep - 1]]: formData });\r\n  };\r\n\r\n  const handleStep = (step) => () => {\r\n    setActiveStep(step);\r\n  };\r\n\r\n  const handleComplete = async () => {\r\n    const newCompleted = completed;\r\n    newCompleted[activeStep] = true;\r\n    setCompleted(newCompleted);\r\n  \r\n    if (allStepsCompleted()) {\r\n      try {\r\n        // Récupérez les données du formulaire\r\n        const formData = {\r\n          nom: 'nom', // Valeur du champ nom\r\n          prenom: 'prenom', // Valeur du champ prénom\r\n          matricule: 'matricule', // Valeur du champ matricule\r\n          centreeCout:'centrecout',\r\n          rfBeneficiaires:'statutBeneficiaire',\r\n          rfDirections: 'rfDirection',\r\n          // Autres champs du formulaire\r\n        };\r\n  \r\n        // Envoyez les données au backend en utilisant une requête POST\r\n        const response = await axios.post('http:localhost/8089/beneficiaires/add',formData);\r\n        const newBeneficiaryId = response.data.id; \r\n        console.log(newBeneficiaryId.id);\r\n\r\n  \r\n        // Vérifiez la réponse du backend et effectuez des actions en conséquence\r\n        if (response.status === 200) {\r\n          // L'ajout du bénéficiaire a réussi\r\n          console.log('Bénéficiaire ajouté avec succès !');\r\n          // Effectuez ici d'autres actions ou affichez un message de succès à l'utilisateur\r\n        } else {\r\n          // Il y a eu une erreur lors de l'ajout du bénéficiaire\r\n          console.log(\"Erreur lors de l'ajout du bénéficiaire\");\r\n          // Effectuez ici d'autres actions ou affichez un message d'erreur à l'utilisateur\r\n        }\r\n  \r\n        // Mettez à jour l'état de la ligne affectée\r\n        const ligne_id = formData.ligne_id; // Remplacez \"ligneId\" par le champ approprié qui contient l'ID de la ligne affectée\r\n        const updatedLigne = await axios.put(\r\n          `http://localhost:8089/lignes/updateLigne`,\r\n          { etat: 'affecté' } // Remplacez \"etat\" par le champ approprié qui représente l'état de la ligne\r\n        );\r\n        setLigneAffectee(updatedLigne.data);\r\n  \r\n        // Réinitialisez le formulaire et les étapes\r\n        handleReset();\r\n      } catch (error) {\r\n        // Gérez les erreurs de la requête\r\n        console.error(\"Erreur lors de l'appel de l'API d'ajout du bénéficiaire :\", error);\r\n        // Effectuez ici d'autres actions ou affichez un message d'erreur à l'utilisateur\r\n      }\r\n    } else {\r\n      handleNext();\r\n    }\r\n  };\r\n  \r\n  useEffect(() => {\r\n    const fetchCentreCout = async () => {\r\n      try {\r\n        const response = await axios.get('http://localhost:8089/centreCouts');\r\n        setCentreCout(response.data);\r\n      } catch (error) {\r\n        console.error('Erreur lors de la récupération des centres de coût :', error);\r\n      }\r\n    };\r\n  \r\n    fetchCentreCout();\r\n  }, []);\r\n  useEffect(() => {\r\n    const fetchRfBeneficiaires = async () => {\r\n      try {\r\n        const response = await axios.get('http://localhost:8089/rfbeneficiaires');\r\n        setRfBeneficiaires(response.data);\r\n      } catch (error) {\r\n        console.error('Erreur lors de la récupération des RfBeneficiaires :', error);\r\n      }\r\n    };\r\n\r\n    fetchRfBeneficiaires();\r\n  }, []);\r\n\r\n  \r\n\r\n  useEffect(() => {\r\n    const fetchRfDirections = async () => {\r\n      try { \r\n        const response = await axios.get('http://localhost:8089/rfdirections');\r\n        setRfDirections(response.data);\r\n      } catch (error) {\r\n        console.error('Erreur lors de la récupération des RfDirections :', error);\r\n      }\r\n    };\r\n\r\n    fetchRfDirections();\r\n  }, []);\r\n  useEffect(() => {\r\n    const fetchLigne = async () => {\r\n      try { \r\n        const response = await axios.get('http://localhost:8089/lignes/RFLingWithstatus?status=En%20Stock');\r\n        setLigne(response.data);\r\n      } catch (error) {\r\n        console.error('Erreur lors de la récupération des lignes :', error);\r\n      }\r\n    };\r\n\r\n    fetchLigne();\r\n  }, []);\r\n  useEffect(() => {\r\n    const fetchForfait = async () => {\r\n      try { \r\n        const response = await axios.get('http://localhost:8089/forfaits');\r\n        setForfait(response.data);\r\n      } catch (error) {\r\n        console.error('Erreur lors de la récupération des forfaits :', error);\r\n      }\r\n    };\r\n\r\n    fetchForfait();\r\n  }, []);\r\n  const [centreeCout, setCentreCout] = useState([]);\r\n  const [rfDirections, setRfDirections] = useState([]);\r\n  const [rfBeneficiaires, setRfBeneficiaires] = useState([]);\r\n  const [ligne, setLigne]= useState([]);\r\n  const [forfait, setForfait]= useState([]);\r\n  \r\n\r\n  const handleReset = () => {\r\n    setActiveStep(0);\r\n    setCompleted({});\r\n  };\r\n  const [ligneAffectee, setLigneAffectee] = useState('');\r\n  const [formData, setFormData] = useState({\r\n    nom: '',\r\n    prenom: '',\r\n    matricule: '',\r\n    numLigne: '',\r\n    nomforfait: '',\r\n    rfBeneficiaires:'',\r\n    rfDirections:'',\r\n    centreeCout:'',\r\n    // Autres champs du formulaire\r\n  });\r\n\r\n\r\n  const renderForm = (step) => {\r\n    switch (step) {\r\n      case 0:\r\n        return (\r\n          <form>\r\n            <Box sx={{ display: 'flex', gap: '20px', margin: '10px' }}>\r\n              <TextField label=\"Nom\" variant=\"outlined\" fullWidth value= {formData.nom}\r\n               onChange={(e) => setFormData({ ...formData, nom: e.target.value })} />\r\n              <TextField label=\"Prénom\" variant=\"outlined\" fullWidth\r\n              value= {formData.prenom}\r\n              onChange={(e) => setFormData({ ...formData, prenom: e.target.value })} />\r\n            </Box>\r\n            <Box sx={{ display: 'flex', gap: '20px', margin: '10px' }}>\r\n              <TextField label=\"Matricule\" variant=\"outlined\" fullWidth />\r\n              <TextField\r\n                label=\"Centre de coût\"\r\n                variant=\"outlined\"\r\n                fullWidth\r\n                select\r\n                value= {formData.centreCout}\r\n               onChange={(e) => setFormData({ ...formData, centreCout: e.target.value })}\r\n              >\r\n                {centreeCout.map((centreCout) => (\r\n                    <MenuItem key={centreCout.id} value={centreCout.id}>\r\n                    {centreCout.centreCout}\r\n                    </MenuItem>\r\n                ))}\r\n              </TextField>\r\n            </Box>\r\n            <Box sx={{ display: 'flex', gap: '20px', margin: '10px' }}>\r\n              <TextField\r\n                label=\"Direction\"\r\n                variant=\"outlined\"\r\n                fullWidth\r\n                select\r\n                value= {formData.rfDirection}\r\n               onChange={(e) => setFormData({ ...formData, rfDirection: e.target.value })}\r\n              >\r\n                 {rfDirections.map((rfDirection) => (\r\n                      <MenuItem key={rfDirection.id} value={rfDirection.id}>\r\n                        {rfDirection.nomDirection}\r\n                      </MenuItem>\r\n                  ))}\r\n              </TextField>\r\n              <TextField\r\n                label=\"Status de Bénéficiaire\"\r\n                variant=\"outlined\"\r\n                fullWidth\r\n                select\r\n                value= {formData.rfBeneficiaire}\r\n               onChange={(e) => setFormData({ ...formData, rfBeneficiaire: e.target.value })}\r\n              >\r\n                 {rfBeneficiaires.map((rfBeneficiaire) => (\r\n                  <MenuItem key={rfBeneficiaire.id} value={rfBeneficiaire.id}>\r\n                    {rfBeneficiaire.statutBeneficiaire}\r\n                  </MenuItem>\r\n                ))}\r\n              </TextField>\r\n            </Box>\r\n            <Box sx={{display: 'flex', justifyContent: 'flex-end', py: 1}}>\r\n            <Button onClick={handleCreerBeneficiaire} variant='contained' disableElevation>Creer</Button>\r\n            </Box>\r\n          </form>\r\n        );\r\n      case 1:\r\n        return (\r\n          <form>\r\n            {/* Votre formulaire pour la deuxième étape */}\r\n            <TextField\r\n          label=\"Les numéros de lignes disponnibles\"\r\n          variant=\"outlined\"\r\n          fullWidth\r\n          select\r\n          sx={{ width: '50%' }}\r\n          value={formData.numLigne}\r\n          onChange={(e) => setFormData({ ...formData, numLigne: e.target.value })}\r\n        >\r\n          {ligne.map((ligne) => (\r\n            <MenuItem key={ligne.id} value={ligne.id}>\r\n              {ligne.numLigne}\r\n            </MenuItem>\r\n          ))}\r\n        </TextField>\r\n\r\n             \r\n          </form>\r\n        );\r\n      case 2:\r\n        return (\r\n          <form>\r\n            {/* Votre formulaire pour la troisième étape */}\r\n            <Box sx={{ display: 'flex', gap: '20px', margin: '10px' }}>\r\n            <TextField\r\n                label=\"Le forfait\"\r\n                variant=\"outlined\"\r\n                fullWidth\r\n                select\r\n                sx={{ width: '50%' }}\r\n                justifyContent=\"center\"\r\n                value= {formData.nomforfait}\r\n               onChange={(e) => setFormData({ ...formData, nomforfait: e.target.value })}\r\n              >\r\n                {forfait.map((forfait) => (\r\n                  <MenuItem key={forfait.id} value={forfait.id}>\r\n                    {forfait.nomForfait}\r\n                  </MenuItem>\r\n                ))}\r\n              </TextField>\r\n              </Box>\r\n          </form>\r\n        );\r\n       \r\n      default:\r\n        return null;\r\n    }\r\n  };\r\n\r\n  function handleCreerBeneficiaire(){\r\n    console.log(\"handleCreerBeneficiaire\");\r\n    console.log(formData);\r\n  }\r\n\r\n  return (\r\n    <Box sx={{ width: '100%' }}>\r\n      <Paper  sx={{ width: \"100%\", mb: 2, padding: \"1%\" }}>\r\n      <Stepper nonLinear activeStep={activeStep}>\r\n        {steps.map((label, index) => (\r\n          <Step key={label} completed={completed[index]}>\r\n            <StepButton color=\"inherit\" onClick={handleStep(index)}>\r\n              {label}\r\n            </StepButton>\r\n          </Step>\r\n        ))}\r\n      </Stepper>\r\n      <Box>\r\n        <Box sx={{pt: 2}}>\r\n          {renderForm(activeStep)}\r\n        </Box>\r\n        {allStepsCompleted() ? (\r\n          <React.Fragment>\r\n            <Typography sx={{ mt: 2, mb: 1 }}>\r\n              All steps completed - you&apos;re finished\r\n            </Typography>\r\n            <Box sx={{ display: 'flex', flexDirection: 'row', pt: 2 }}>\r\n              <Box sx={{ flex: '1 1 auto' }} />\r\n              <Button onClick={handleReset}>Reset</Button>\r\n            </Box>\r\n          </React.Fragment>\r\n        ) : (\r\n          <React.Fragment>\r\n            <Box\r\n              sx={{\r\n                display: 'flex',\r\n                flexDirection: 'row',\r\n                pt: 2,\r\n                marginTop: '20px',\r\n              }}\r\n            >\r\n              <Button\r\n                color=\"inherit\"\r\n                disabled={activeStep === 0}\r\n                onClick={handleBack}  \r\n              >\r\n                Back\r\n              </Button>\r\n              <Box sx={{ flex: '1 1 auto' }} />\r\n              \r\n              {activeStep + 1 === steps.length ?\r\n                <Button onClick={handleComplete}>\r\n                  Finish\r\n                </Button> : \r\n                <Button onClick={handleNext}>\r\n                  Next\r\n                </Button>\r\n              }\r\n            </Box>\r\n          </React.Fragment>\r\n        )}\r\n      </Box>\r\n      </Paper>\r\n    </Box>\r\n  );\r\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}