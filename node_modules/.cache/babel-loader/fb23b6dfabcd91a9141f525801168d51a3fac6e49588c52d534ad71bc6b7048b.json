{"ast":null,"code":"import { isEmpty, isNull, isNumber, isUndefined, toNumber as lodashToNumber, trim } from \"lodash\";\nexport const isDefined = value => {\n  return !isUndefined(value) && !isNull(value);\n};\nexport const isNotDefined = value => {\n  return isUndefined(value) || isNull(value);\n};\nexport const isNotDefinedOrEmpty = value => {\n  return isUndefined(value) || isNull(value) || isEmpty(value);\n};\nexport const isDefinedAndNotEmpty = value => {\n  return !isUndefined(value) && !isNull(value) && !isEmpty(value);\n};\nexport const toNumber = value => {\n  if (isNotDefined(value)) return null;\n  return lodashToNumber(value);\n};\nexport const toString = value => {\n  if (isNotDefined(value)) return null;\n  if (isNumber(value)) return `${value}`;\n  return trim(value);\n};\nexport const getIdOrNull = value => {\n  if (isNotDefinedOrEmpty(value)) return null;\n  return value.id;\n};","map":{"version":3,"names":["isEmpty","isNull","isNumber","isUndefined","toNumber","lodashToNumber","trim","isDefined","value","isNotDefined","isNotDefinedOrEmpty","isDefinedAndNotEmpty","toString","getIdOrNull","id"],"sources":["C:/Users/Pc/Desktop/ahmed/src/utils/helper.ts"],"sourcesContent":["import {\n  isEmpty,\n  isNull,\n  isNumber,\n  isUndefined,\n  toNumber as lodashToNumber,\n  trim,\n} from \"lodash\";\n\nexport const isDefined = (value: any) => {\n  return !isUndefined(value) && !isNull(value);\n};\n\nexport const isNotDefined = (value: any) => {\n  return isUndefined(value) || isNull(value);\n};\n\nexport const isNotDefinedOrEmpty = (value: any) => {\n  return isUndefined(value) || isNull(value) || isEmpty(value);\n};\n\nexport const isDefinedAndNotEmpty = (value: any) => {\n  return !isUndefined(value) && !isNull(value) && !isEmpty(value);\n};\n\nexport const toNumber = (value: string | number | undefined) => {\n  if (isNotDefined(value)) return null;\n\n  return lodashToNumber(value);\n};\n\nexport const toString = (value: string | number | undefined) => {\n  if (isNotDefined(value)) return null;\n  if (isNumber(value)) return `${value}`;\n\n  return trim(value);\n};\n\nexport const getIdOrNull = (value: any) => {\n  if (isNotDefinedOrEmpty(value)) return null;\n  return value.id;\n};\n"],"mappings":"AAAA,SACEA,OAAO,EACPC,MAAM,EACNC,QAAQ,EACRC,WAAW,EACXC,QAAQ,IAAIC,cAAc,EAC1BC,IAAI,QACC,QAAQ;AAEf,OAAO,MAAMC,SAAS,GAAIC,KAAU,IAAK;EACvC,OAAO,CAACL,WAAW,CAACK,KAAK,CAAC,IAAI,CAACP,MAAM,CAACO,KAAK,CAAC;AAC9C,CAAC;AAED,OAAO,MAAMC,YAAY,GAAID,KAAU,IAAK;EAC1C,OAAOL,WAAW,CAACK,KAAK,CAAC,IAAIP,MAAM,CAACO,KAAK,CAAC;AAC5C,CAAC;AAED,OAAO,MAAME,mBAAmB,GAAIF,KAAU,IAAK;EACjD,OAAOL,WAAW,CAACK,KAAK,CAAC,IAAIP,MAAM,CAACO,KAAK,CAAC,IAAIR,OAAO,CAACQ,KAAK,CAAC;AAC9D,CAAC;AAED,OAAO,MAAMG,oBAAoB,GAAIH,KAAU,IAAK;EAClD,OAAO,CAACL,WAAW,CAACK,KAAK,CAAC,IAAI,CAACP,MAAM,CAACO,KAAK,CAAC,IAAI,CAACR,OAAO,CAACQ,KAAK,CAAC;AACjE,CAAC;AAED,OAAO,MAAMJ,QAAQ,GAAII,KAAkC,IAAK;EAC9D,IAAIC,YAAY,CAACD,KAAK,CAAC,EAAE,OAAO,IAAI;EAEpC,OAAOH,cAAc,CAACG,KAAK,CAAC;AAC9B,CAAC;AAED,OAAO,MAAMI,QAAQ,GAAIJ,KAAkC,IAAK;EAC9D,IAAIC,YAAY,CAACD,KAAK,CAAC,EAAE,OAAO,IAAI;EACpC,IAAIN,QAAQ,CAACM,KAAK,CAAC,EAAE,OAAQ,GAAEA,KAAM,EAAC;EAEtC,OAAOF,IAAI,CAACE,KAAK,CAAC;AACpB,CAAC;AAED,OAAO,MAAMK,WAAW,GAAIL,KAAU,IAAK;EACzC,IAAIE,mBAAmB,CAACF,KAAK,CAAC,EAAE,OAAO,IAAI;EAC3C,OAAOA,KAAK,CAACM,EAAE;AACjB,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}